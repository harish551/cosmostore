syntax = "proto3";
package harish551.cosmostore.store;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "store/item.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/harish551/cosmostore/x/store/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a item by id.
	rpc Item(QueryGetItemRequest) returns (QueryGetItemResponse) {
		option (google.api.http).get = "/harish551/cosmostore/store/item/{id}";
	}

	// Queries a list of item items.
	rpc ItemAll(QueryAllItemRequest) returns (QueryAllItemResponse) {
		option (google.api.http).get = "/harish551/cosmostore/store/item";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetItemRequest {
	uint64 id = 1;
}

message QueryGetItemResponse {
	Item Item = 1 [(gogoproto.nullable) = false];
}

message QueryAllItemRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllItemResponse {
	repeated Item Item = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


// this line is used by starport scaffolding # 3
