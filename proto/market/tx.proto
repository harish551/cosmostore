syntax = "proto3";
package harish551.cosmostore.market;
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/harish551/cosmostore/x/market/types";
import "gogoproto/gogo.proto";
// Msg defines the Msg service.
service Msg {
      rpc ListItem(MsgListItem) returns (MsgListItemResponse);
  rpc DelistItem(MsgDelistItem) returns (MsgDelistItemResponse);
  rpc BuyItem(MsgBuyItem) returns (MsgBuyItemResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgListItem {
  string creator = 1;
  string itemID = 2;
  repeated cosmos.base.v1beta1.Coin price = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgListItemResponse {
}

message MsgDelistItem {
  string creator = 1;
  string id = 2;
}

message MsgDelistItemResponse {
}

message MsgBuyItem {
  string creator = 1;
  string id = 2;
  repeated cosmos.base.v1beta1.Coin price = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgBuyItemResponse {
}

// this line is used by starport scaffolding # proto/tx/message